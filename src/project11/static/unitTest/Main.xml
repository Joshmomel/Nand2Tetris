<class>  <keyword> class </keyword>  <identifier> Main </identifier>  <symbol> { </symbol>  <subroutineDec>    <keyword> function </keyword>    <keyword> void </keyword>    <identifier> fill </identifier>    <symbol> ( </symbol>    <parameterList>      <identifier> Array </identifier>      <identifier> a </identifier>      <symbol> , </symbol>      <keyword> int </keyword>      <identifier> size </identifier>    </parameterList>    <symbol> ) </symbol>    <subroutineBody>      <symbol> { </symbol>      <statements>        <whileStatement>          <keyword> while </keyword>          <symbol> ( </symbol>          <expression>            <term>              <identifier> size </identifier>            </term>            <symbol> &gt; </symbol>            <term>              <integerConstant> 0 </integerConstant>            </term>          </expression>          <symbol> ) </symbol>          <symbol> { </symbol>          <statements>            <letStatement>              <keyword> let </keyword>              <identifier> size </identifier>              <symbol> = </symbol>              <expression>                <term>                  <identifier> size </identifier>                </term>                <symbol> - </symbol>                <term>                  <integerConstant> 1 </integerConstant>                </term>              </expression>              <symbol> ; </symbol>            </letStatement>            <letStatement>              <keyword> let </keyword>              <identifier> a </identifier>              <symbol> [ </symbol>              <expression>                <term>                  <identifier> size </identifier>                </term>              </expression>              <symbol> ] </symbol>              <expression>                <term>                  <identifier> Array </identifier>                  <symbol> . </symbol>                  <identifier> new </identifier>                  <symbol> ( </symbol>                  <expressionList>                    <expression>                      <term>                        <integerConstant> 3 </integerConstant>                      </term>                    </expression>                  </expressionList>                  <symbol> ) </symbol>                </term>              </expression>              <symbol> ; </symbol>            </letStatement>          </statements>          <symbol> } </symbol>        </whileStatement>        <returnStatement>          <keyword> return </keyword>          <symbol> ; </symbol>        </returnStatement>      </statements>      <symbol> } </symbol>    </subroutineBody>  </subroutineDec>  <symbol> } </symbol></class>